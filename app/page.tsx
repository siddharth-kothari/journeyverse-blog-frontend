

import AllBlogs from '@/components/AllBlogs'
import { api } from './api';
import Pagination from '@/components/Pagination';
import qs from 'qs';
import { IQueryOptions } from '@/typing';
import type { Metadata } from 'next'

interface IPropType {
  page: number,
  search: any
}

export const getPosts = async({page ,search}:IPropType) =>{

  const options: IQueryOptions = {
    sort:['id:desc'],
    pagination: {
      page: page ? page : 1,
      pageSize: 16
    },
  }

  if(search){
    options.filters = {
      Title:{
        $containsi: search,
      },
      // Content:{
      //   $containsi: search,
      // },
      Category:{
        $containsi: search,
      },
    }
  }
  
  const queryString = qs.stringify(options);

  //console.log("queryString",queryString);
  const res = api.get(`/posts?populate=*&${queryString}`)
  return res;
  
}

export const metadata: Metadata = {
  title: 'Home | Blog Site',
  description: 'Generated by create next app',
}

export default async function Home({ searchParams }:any) {
  
 
  const {page} = searchParams
  const {search} = searchParams

  const  { data }  = await getPosts({page,search});

  const posts = data.data;
  //console.log('search',posts);
   const pagination = data.meta.pagination;
   
  return (
  <>
    <AllBlogs posts={posts} />
    <Pagination pagination={pagination} currentPage={page}  />
  </>
  )
}